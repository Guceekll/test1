'use client';

import { useRef, useState } from 'react';

interface InputPanelProps {
  value: string;
  onChange: (val: string) => void;
  onSend: (text: string, file?: File) => void;
  onUpload?: (file: File) => void;
  onFinish?: () => void;
  showFinish?: boolean;
  isFinishing?: boolean;
}

const InputPanel = ({
  value,
  onChange,
  onSend,
  onFinish,
  showFinish = true,
  isFinishing = false,
}: InputPanelProps) => {
  const fileInputRef = useRef<HTMLInputElement | null>(null);
  const [selectedFile, setSelectedFile] = useState<File | null>(null);

  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {
    if (e.key === 'Enter') {
      e.preventDefault();
      triggerSend();
    }
  };

  const triggerSend = () => {
    if (!value.trim() && !selectedFile) return;
    onSend(value, selectedFile || undefined);
    onChange('');
    setSelectedFile(null);
  };

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0];
    if (file) {
      setSelectedFile(file);
    }
  };

  return (
    <div className="w-full px-4 py-3 border-t border-gray-200 bg-white flex justify-center">
      <div className="w-full max-w-4xl flex flex-col gap-3">
        {/* ✅ 文件卡片 */}
        {selectedFile && (
          <div className="flex items-center gap-3 bg-pink-100 rounded-xl px-4 py-3 w-fit shadow-sm border border-pink-200">
            {/* 文件信息 */}
            <div className="flex flex-col text-sm max-w-[200px]">
              <span className="font-semibold text-gray-800 truncate">{selectedFile.name}</span>
              <span className="text-gray-500 text-xs">
                {selectedFile.type?.split('/')[1]?.toUpperCase() || 'FILE'}
              </span>
            </div>

            {/* 删除按钮 */}
            <button
              onClick={() => setSelectedFile(null)}
              className="ml-2 text-gray-500 hover:text-gray-800 rounded-full p-1 transition"
              title="Remove file"
            >
              <svg
                className="h-4 w-4"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth="2"
                  d="M6 18L18 6M6 6l12 12"
                />
              </svg>
            </button>
          </div>
        )}

        {/* ✅ 输入框 + Finish 按钮同一行 */}
        <div className="flex items-center gap-2">
          {/* 输入区域 */}
          <div className="flex items-center flex-1 px-4 py-2 border border-black rounded-full shadow bg-gradient-to-b from-white to-gray-50">
            <button
              onClick={() => fileInputRef.current?.click()}
              className="text-xl text-gray-500"
              title="Upload file"
            >
              📎
            </button>
            <input
              type="file"
              ref={fileInputRef}
              className="hidden"
              onChange={handleFileChange}
            />

            <input
              type="text"
              value={value}
              onChange={(e) => onChange(e.target.value)}
              onKeyDown={handleKeyPress}
              placeholder="type your trouble here"
              className="flex-1 px-4 bg-transparent border-none focus:outline-none text-gray-800 placeholder-gray-400"
            />

            <button className="text-xl mx-2" title="Voice input (coming soon)">🎤</button>
            <button
              onClick={triggerSend}
              className="w-10 h-10 rounded-full bg-blue-500 flex items-center justify-center text-white text-lg"
              title="Send"
            >
              ➤
            </button>
          </div>

          {/* Finish按钮 */}
          {showFinish && (
            <button
              onClick={onFinish}
              disabled={isFinishing}
              className={`flex-shrink-0 px-4 py-2 rounded-lg text-sm transition ${
                isFinishing
                  ? 'bg-gray-200 text-gray-500 cursor-not-allowed'
                  : 'bg-gray-300 hover:bg-gray-400'
              }`}
              title="Finish this interview"
            >
              {isFinishing ? 'Generating...' : 'Finish'}
            </button>
          )}
        </div>
      </div>
    </div>
  );
};

export default InputPanel;
