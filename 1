✅ Dana 的核心功能清单（简明中文版本）
Dana 是一个专为构建智能代理（Agent）而设计的 AI 框架，具备以下核心能力：

🔹 一、Agent 状态管理（State Management）
功能	说明
记住对话/任务上下文	可以让 Agent 记住之前用户说了什么、做了什么
存储和读取中间数据	可以在任务中间保存变量，如“用户ID”、“任务步骤”等
支持私有/共享数据区	私密数据只自己用，共享数据可以给多个模块/Agent 用
调试用状态可视化	查看 Agent 内部状态，方便开发和排错

🔹 二、任务规划与执行（Planning & Execution）
功能	说明
任务自动分解	能自动把大任务拆分成一系列小步骤（如「整理报告」→「收集资料」→「撰写草稿」）
支持串行与并行执行策略	可以选择任务一步一步做，或多个步骤同时并发做
自动选择合适工具执行任务	自动判断使用哪个函数/API 工具完成任务
任务执行失败时自动重试	步骤失败可以自动换方法或重新执行

🔹 三、推理与判断（Reasoning）
功能	说明
根据现有信息自主推理行动步骤	比如用户只说“帮我处理一下”，Agent 会根据情况判断“是写邮件还是查数据”
支持迭代式/并行式/自适应推理	可以逐步尝试解决方案，或并行尝试多种策略
执行前可优化推理路径	推理过程可提前优化，避免不必要步骤

🔹 四、模块组合与定制（Agent Customization）
功能	说明
组装多个子Agent成大Agent	比如一个总Agent调度多个专用Agent（问答、翻译、搜索）协作完成任务
支持继承已有功能做扩展	可以在已有Agent基础上添加自己的工具或行为逻辑
只用配置文件就能切换功能模块	通过更改配置，就能替换Agent行为而无需改代码

🔹 五、开发与测试支持
功能	说明
基于 Python 易于扩展与集成	与现有 Python 工具链/库（如 LLM、API、数据库）兼容
支持 pytest 自动化测试	开发后可写自动化测试脚本，确保 Agent 工作正确
模块化结构，便于单元测试与调试	计划、推理、工具调用全部独立模块，可单独调试

✅ 总结一句话：
Dana 就是一个能“记住上下文、自动拆解任务、自己思考该怎么做，并调用工具完成任务”的 AI 智能代理开发框架。

