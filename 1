const promptPool = [
  "Handler is stuck. What should I do?",
  "Why is the alignment always off?",
  "Etcher shows vacuum alarm. How to fix it?",
  "CVD can't reach target temp. Possible causes?",
  "Load lock has a leak warning. What now?",
  "Robot can't pick up wafers.",
  "Coating thickness is uneven. How to adjust?",
  "PVD says target is worn out. What next?",
  "Edge defects keep appearing. Any ideas?",
  "Recipe froze during run. How do I recover?"
];


'use client';

import { useEffect, useRef } from 'react';

interface Message {
  type: 'question' | 'answer' | 'loading';
  text: string;
  summary?: boolean;
}

interface ChatWindowProps {
  messages: Message[];
}

export default function ChatWindow({ messages }: ChatWindowProps) {
  const bottomRef = useRef<HTMLDivElement | null>(null);

  useEffect(() => {
    bottomRef.current?.scrollIntoView({ behavior: 'smooth' });
  }, [messages]);

  return (
    <div className="flex-1 overflow-y-auto px-4 py-6 space-y-4 bg-white">
      {messages.map((msg, idx) => {
        const isUser = msg.type === 'question';

        return (
          <div key={idx} className={`flex ${isUser ? 'justify-end' : 'justify-start'}`}>
            <div
              className={`max-w-[70%] px-4 py-2 rounded-2xl text-sm whitespace-pre-wrap
                ${msg.type === 'question' ? 'bg-blue-500 text-white' : ''}
                ${msg.type === 'answer' && msg.summary ? 'bg-green-100 text-green-800 border border-green-400' : ''}
                ${msg.type === 'answer' && !msg.summary ? 'bg-gray-200 text-gray-800' : ''}
                ${msg.type === 'loading' ? 'bg-gray-100 text-gray-500 animate-pulse' : ''}
              `}
            >
              {msg.text}
            </div>
          </div>
        );
      })}
      <div ref={bottomRef} />
    </div>
  );
}
