
テスト方法

本テストは、製品公式ガイドラインに従い、Webアプリ上で実際に Agent を作成・操作し、生成された Agent に対して繰り返し質問を行いながら挙動・回答内容を確認した。以下のテスト手法を組み合わせて実施した。
	•	機能テスト（Functional Testing）：Webアプリが提供する各機能（Agent 作成・対話・知識要約・データ分析）の動作確認を行った。
	•	結合テスト（Integration Testing）：Coordinator Agent を通じて複数 Agent の連携や情報統合が正しく機能するかを確認した。
	•	ブラックボックステスト（Black-box Testing）：システム内部の実装には立ち入らず、入力と出力結果の整合性と期待通りの動作を確認した。


 今回のテストで Agent に記憶・学習させた内容

1️⃣ ユーザーが対話を通じて与えた知識
	•	トラブルシューティングに関する具体的な手順や経験
	•	Wi-Fi 接続問題に関する原因・対応策
	•	自社業務に関連したノウハウ・背景知識
	•	実際にユーザーが入力した情報の要約

2️⃣ アップロードしたデータ・ドキュメント
	•	ABLE ソフトに関する取扱説明書・分析データ
	•	各種 CSV や業務データファイル
	•	Job Description や CV などの業務関連情報

3️⃣ Agent 作成時に設定した Expert Guidance
	•	Agent がどう行動すべきかの指示やルール
	•	どのような問いかけにどう反応すべきかの期待値

⸻

テストで確認したかったことは？
	•	✅ これらの記憶・設定・要約を基に、現実的な課題に対して有効な回答ができるか
	•	✅ 記憶した情報をただ「繰り返す」のではなく、知識として活用し、問題解決ができるか

⸻

結論としてまとめるなら

今回のテストでは、ユーザーが提供した業務知識・実データ・分析結果・ガイダンスを Agent に記憶させ、それが実際の問題解決・質問応答・分析結果出力にどの程度活かされているかを確認した。

⸻

✅ この内容を テスト対象と記憶させた内容 として報告書に追加することも可能です。
要望があれば、正式な文章で組み込みます！
