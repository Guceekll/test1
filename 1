'use client';

interface InputPanelProps {
  value: string;
  onChange: (val: string) => void;
  onSend: () => void;
  onUpload?: () => void;
  onFinish?: () => void;
  showFinish?: boolean;
  isFinishing?: boolean;
}

const InputPanel = ({
  value,
  onChange,
  onSend,
  onUpload,
  onFinish,
  showFinish = true,
  isFinishing = false,
}: InputPanelProps) => {
  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {
    if (e.key === 'Enter') {
      e.preventDefault();
      onSend();
    }
  };

  return (
    <div className="w-full px-4 py-3 border-t border-gray-200 bg-white flex justify-center">
      <div className="w-full max-w-4xl flex items-center justify-between gap-4">
        <div className="flex items-center flex-1 px-4 py-2 border border-black rounded-full shadow bg-gradient-to-b from-white to-gray-50">
          <button onClick={onUpload} className="text-xl text-gray-500" title="Upload file">
            ðŸ“Ž
          </button>
          <input
            type="text"
            value={value}
            onChange={(e) => onChange(e.target.value)}
            onKeyDown={handleKeyPress}
            placeholder="type your trouble here"
            className="flex-1 px-4 bg-transparent border-none focus:outline-none text-gray-800 placeholder-gray-400"
          />
          <button className="text-xl mx-2" title="Voice input (coming soon)">
            ðŸŽ¤
          </button>
          <button
            onClick={onSend}
            className="w-10 h-10 rounded-full bg-blue-500 flex items-center justify-center text-white text-lg"
            title="Send"
          >
            âž¤
          </button>
        </div>
        {showFinish && (
          <button
            onClick={onFinish}
            disabled={isFinishing}
            className={`flex-shrink-0 px-3 py-2 text-sm rounded transition
              ${isFinishing ? 'bg-gray-200 text-gray-500 cursor-not-allowed' : 'bg-gray-300 hover:bg-gray-400'}
            `}
            title="Finish this interview"
          >
            {isFinishing ? 'Generating...' : 'Finish'}
          </button>
        )}
      </div>
    </div>
  );
};

export default InputPanel;
