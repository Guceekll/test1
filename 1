import base64
import pyotp
import hashlib

def generate_token_secret(key):
    """
    为给定的 key 生成稳定的 TOTP Secret
    
    Args:
        key (str): 原始密钥
    
    Returns:
        str: 用于 TOTP 的 Base32 Secret
    """
    # 如果已经是有效的 Base32，直接返回
    if is_valid_base32(key):
        return key
    
    # 对 key 进行哈希处理，生成一个稳定的密钥
    hash_obj = hashlib.sha256(str(key).encode('utf-8'))
    hex_digest = hash_obj.hexdigest()
    
    # 将哈希值转换为 Base32
    base32_secret = base64.b32encode(bytes.fromhex(hex_digest)).decode('utf-8').rstrip('=')
    
    # 确保长度为16个字符（TOTP 的标准长度）
    base32_secret = (base32_secret + base32_secret)[:16]
    
    return base32_secret

def text_to_base32(text):
    """
    Convert input to Base32 encoding
    
    Args:
        text (str): Input to be converted
    
    Returns:
        str: Base32 encoded string
    """
    return generate_token_secret(text)

def is_valid_base32(text):
    """
    检查给定文本是否为有效的 Base32 字符串
    
    Args:
        text (str): 待验证的文本
    
    Returns:
        bool: 是否为有效的 Base32
    """
    base32_alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567='
    
    # 检查是否只包含 Base32 字符
    return all(char.upper() in base32_alphabet for char in text)
